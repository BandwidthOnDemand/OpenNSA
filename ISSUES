Long term:
  Documentation :-)
  Persistence for connections
  Need an easy way to see active/scheduled/future connections
   - In general: Get information out of OpenNSA in an easily digestable way
  Deal with bandwidth in calendar (requires joint resource concept)


General:

  Make CLI setup more like regular config to lessen confusion
  Seperate protocol stack from connection (done for provider, client still needs work)
  Profiling of protocol stack / backends
  Failing to send reserveConf can keep connection in INITIAL
  connection.py and simplebackend.py steps on each others toes in scheduled teardown
  Make RPC + callback timeout configurable


Client:

  TLS for client service - URL creation is heuristic -> suck!
  Better connection names - use UUIDs for global ids


Backends:

  Multiple switches support
  NCS backend
  Force10: Should do shutdown when interfaces are not in use
  JunOS:
    Failure handling is terrible for command sending
    Log success/failure instead of commands (only on debug)

